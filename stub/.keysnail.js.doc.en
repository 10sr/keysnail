
// -------------------- How to bind function to the key sequence -------------------- //
//
// You can bind the function to the key sequence, using the functions listed below.
//
// key.setGlobalKey(keys, func, ksDescription, ksNoRepeat);
// key.setEditKey(keys, func, ksDescription, ksNoRepeat);
// key.setViewKey(keys, func, ksDescription, ksNoRepeat);
// key.setCaretKey(keys, func, ksDescription, ksNoRepeat);
//
// Here are the descriptions of the each argument.
//
// keys          => key (string) or key sequence (array)
//                  if you want to bind a function to mutliple key sequence use 'array of array'
//                  expression of the key follows the Emacs
//                  ex1) Ctrl + Alt + t : C-M-t
//                  ex2) Arrow Key      : <up>, <down>, <left>, <right>
//                  ex3) PgUp, PgDn     : <prior>, <next>
//                  ex4) F1, F2, F3     : <f1>, <f2>, <f3>
//
// func          => anonymous function.
//                  this function can take two arguments.
//                     * argument 1 => key event
//                     * argument 2 => prefix argument (or null)
//                  you can use these arguments through declaring the
//                  following expression.
//                        function (aEvent, aArg)
// ksDescription => Description of the function.
//                  you can omit this argument.
//
// ksNoRepeat    => when false, command (function) is executed
//                  prefix arguments times.
//                  if you want to use prefix argument in your
//                  function, and do not want to repeat it, set
//                  this value to true.
//                  you can omit this argument.
//
// Actually, these functions just wrap the function below.
//
// key.defineKey(keyMapName, keys, func, ksDescription, ksNoRepeat);
//
// keyMapName    => key.modes.GLOBAL, key.modes.VIEW, key.modes.EDIT, key.modes.CARET
//
// ==================== About hook ====================
// User can set the function to the hook.
// For example, when KeySnail the key press event of the key.quitKey,
// functions set to KeyBoardQuit are called.
// You can bind "Cancell isearch", "Deselect the text", and so forth.

// key.quitKey : Cancel the current input.
//               This key event calls the KeyBoardQuit hook.
//               You can set the command like "close the find bar" to it.

// key.helpKey : Display the interactive help. General help key.
//               When you input C-c C-c <helpKey>, keybindings begin with C-c C-c are displayed.
//               And in this script settings, <helpKey> b lists the all keybindings.
