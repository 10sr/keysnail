// ==================== KeySnail configuration file ==================== //
####REPLACE_WITH_DOC####
// ==================== special keys ==================== //
####REPLACE_WITH_SPECIAL_KEYS####
// macro.setSleepTime(100); // key macro interval

// ==================== load modules ==================== //
// 初期化ファイルを複数のファイルに分割し, 読み込むことが出来る.
// userscript.addLoadPath("~/.keysnail.d");
// userscript.require("module1.js");
// userscript.require("module2.js");

// ==================== prefix ==================== //
// エディットモードで C-z を入力すると, ビューモードのキーバインドが使える
// key.keyMapHolder[key.modes.EDIT]["C-z"] = key.keyMapHolder[key.modes.VIEW];

// ==================== set about:config value ==================== //
// util.setPrefs(
//     {
//         "ui.key.generalAccessKey": 0, // kill access key (for Mac User)
//         "ui.caretWidth": 5,           // Make caret bolder
//         "ui.caretBlinkTime": 0,       // Stop caret blink
//         "accessibility.typeaheadfind": true, // Enable "Find As You Type"
//         "accessibility.typeaheadfind.linksonly": true // Only for links
//     }
// );

// ==================== set hooks ==================== //
hook.setHook("KeyBoardQuit",
            function (aEvent) {
                // 検索バーが開いていたら閉じる
                command.closeFindBar();
                if (util.isCaretEnabled()) {
                    // 編集エリア / キャレットブラウジングモードならマークをリセット
                    command.resetMark(aEvent);
                } else {
                    // ビューモードなら選択を解除
                    goDoCommand('cmd_selectNone');
                }
                // 汎用的なキャンセルイベントを生成
                key.generateKey(aEvent.originalTarget, KeyEvent.DOM_VK_ESCAPE, true);
            });

// KeySnail を無効にしたいページの URL を正規表現で指定する
// key.blackList = [
//     "http://mail\.google\.com/.*"
// ];

// hook.setHook("LocationChange",
//              function (aNsURI) {
//                  var URL = aNsURI ? aNsURI.spec : null;
//                  key.suspendWhenMatched(URL, key.blackList);
//              });

