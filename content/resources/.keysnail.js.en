// ==================== KeySnail configuration file ==================== //
####REPLACE_WITH_DOC####
// You can preserve your code in this area when generating the init file using GUI.
// Put all your code except special key, set*key, hook, blacklist.
//{{%PRESERVE%

// ==================== prefix ==================== //
// You can use view-mode keybindings in edit-mode by adding
// the prefix key C-z.
// key.keyMapHolder[key.modes.EDIT]["C-z"] = key.keyMapHolder[key.modes.VIEW];

// ==================== set about:config value ==================== //
// util.setPrefs({"ui.key.generalAccessKey" : 0, // kill access key (for Mac User)
//                "ui.caretWidth"           : 5, // Make caret bolder
//                "ui.caretBlinkTime"       : 0  // Stop caret blink
//               });
//}}%PRESERVE%

// ==================== special keys ==================== //
####REPLACE_WITH_SPECIAL_KEYS####
// macro.setSleepTime(100); // key macro interval

// ==================== set hooks ==================== //
hook.setHook("KeyBoardQuit",
            function (aEvent) {
                // Close the find bar if opened
                command.closeFindBar();
                if (util.isCaretEnabled()) {
                    // in edit area or caret browsing mode, reset the mark
                    command.resetMark(aEvent);
                } else {
                    // in view mode, deselect all
                    goDoCommand('cmd_selectNone');
                }
                // generate general cancell event
                key.generateKey(aEvent.originalTarget, KeyEvent.DOM_VK_ESCAPE, true);
            });

// If you want to suspend the KeySnail in certain page, put its URL (regexp) into the list
// key.blackList = [
//     "http://mail\.google\.com/.*"
// ];

// hook.setHook("LocationChange",
//              function (aNsURI) {
//                  var URL = aNsURI ? aNsURI.spec : null;
//                  key.suspendWhenMatched(URL, key.blackList);
//              });

