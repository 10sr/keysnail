<!ENTITY keySnail.pluginManager.title "Plugin manager">

<!-- toolbar button -->
<!ENTITY keySnail.pluginManager.manageMenu "Manage">
<!ENTITY keySnail.pluginManager.manageMenu.tooltip "Manage plugins">

<!-- context menu -->
<!ENTITY keySnail.pluginManager.editThisFile "Edit this file">
<!ENTITY keySnail.pluginManager.showContainingFolder "Show containing folder">
<!ENTITY keySnail.pluginManager.viewFile "View file in a new tab">
<!ENTITY keySnail.pluginManager.viewRemoteFile "View remote file in a new tab">
<!ENTITY keySnail.pluginManager.reloadPlugin "Reload this plugin">

<!ENTITY keySnail.pluginManager.enabled "Enabled">
<!ENTITY keySnail.pluginManager.checkForUpdates "Check for update">
<!ENTITY keySnail.pluginManager.reloadPlugins "Reload plugins">
<!ENTITY keySnail.pluginManager.installPlugin "Install plugin">
<!ENTITY keySnail.pluginManager.checkForAllUpdates "Check for all plugin's updates">

<!-- help -->
<!ENTITY keySnail.pluginManager.howto.title "How to install a plugin">
<!ENTITY keySnail.pluginManager.howto.rightClick "Open the context menu for the link to the plugin">
<!ENTITY keySnail.pluginManager.howto.selectInstallMenu "Select 'Install this plugin'">
<!ENTITY keySnail.pluginManager.howto.customize "Installation finished. Let's Customize it.">
<!ENTITY keySnail.pluginManager.howto.visitWiki "Get Plugins!">

<!ENTITY keySnail.pluginManager.ext "Ext">
<!ENTITY keySnail.pluginManager.ext.title "What's the ext?">
<!ENTITY keySnail.pluginManager.ext.description1 "Ext is the command system of the KeySnail. If you are the Emacs user, imagine M-x.">
<!ENTITY keySnail.pluginManager.ext.description2 "Put codes below to your .keysnail.js and you can list / execute all your exts.">
<!ENTITY keySnail.pluginManager.ext.description3 "Though ext is normally provided by plugins, you can add your original ext by putting the code like blow to your .keysnail.js PRESERVE area. Alternatively, you can put the code to the preserved code in the preference dialog.">

<!ENTITY keySnail.pluginManager.option.title "Setting options">
<!ENTITY keySnail.pluginManager.option.description1 "Some plugin provides options and user can configure the plugin behavior through them.">
<!ENTITY keySnail.pluginManager.option.description2 "For example, if plugin provides option named 'foo_bar.option1', you can set value to this option by putting the code below to your .keysnail.js PRESERVE area.">

